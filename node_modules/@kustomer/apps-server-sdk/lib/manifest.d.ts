import { Tag, Visibility } from './common';
import { Klass, KView, Action, Changelog, Shortcut, I18n, OWebhook, Command } from './components';
/**
 * @private
 */
export interface Manifest {
    /** The internally used name for an app. Can not include spaces or dashes (unique) */
    app: string;
    /** The name of your app that will be displayed within Kustomer */
    title: string;
    /** The client id given to you on app registration */
    clientId: string;
    /** The client secret given to you on app registration */
    clientSecret: string;
    /** the url that requests will be sent to ex https://www.shopify.kustomerapp.com */
    url: string;
    /** the roles the app will be provisioned to access different data */
    roles: string[];
    /** The url for your app icon will be displayed within Kustomer */
    iconUrl: string;
    /** The markdown-supported set of instructions for your app icon will be displayed on the app store listing */
    instructions?: string;
    /** The current version of your app */
    version: string;
    /** The list of apps that are required for this app to function. These will be in the format of app_name-semantic_version */
    dependencies: string[];
    /** An object which stores information about how the contents of an app have changed from each version as described by its developer */
    changelog: Changelog;
    /** The description of your app that will be displayed on the app store listing */
    description: string;
    /** An object to store app details. */
    appDetails: {
        /** The app developer. */
        appDeveloper: {
            /** The app developer's name (= link title). */
            name: string;
            /** The app developer's website (= link URL). */
            website: string;
            /** The app developer's support email address. */
            supportEmail: string;
        };
        /** The external platform the app integrates with. */
        externalPlatform: {
            /** The external platform's name (= link title). */
            name: string;
            /** The external platform's website (= link URL). */
            website: string;
        };
        /** Links to documentation, e.g. KB articles. */
        documentationLinks?: {
            /** The link title. */
            title: string;
            /** The link URL. */
            url: string;
        };
    };
    /** List of tags which can be one or more of the categories ai, analytics, csat, ecommerce or messaging and one or more of the non-category tags builtByKustomer and featured */
    tags?: Tag[];
    /** An array of urls for images of your app that will be displayed on the app store listing */
    screenshots: string[];
    /** The name of your app that will be displayed within Kustomer */
    installUrl?: string;
    /** The message that will be displayed within Kustomer after a successful installation */
    postInstallMessage?: string;
    /** A boolean which represents if an app is part of the Kustomer platform or not */
    default: boolean;
    /** Whether or not is installed at the System level */
    system: boolean;
    /** Public Apps will be seen across all orgs within Kustomer. Private Apps are for a single org to install */
    visibility: Visibility;
    /** An object used to configure a fully external iframe-based settings page. */
    settingsPageConfig?: {
        /** The title of the settings page for your app. */
        title: string;
        /** The description of the settings page for your app. */
        description: string;
        /** The url of the contents of the settings page for your app. */
        url: string;
    };
    /** Used to configure the available settings for an external app. The object inside is a nested map of each app setting based on a each setting's category and name */
    settings?: {
        /**The category of a group of settings*/
        [category: string]: {
            /** The name of the given setting */
            [name: string]: {
                /** The description of the given setting */
                description: string;
                /** The default value of the given setting */
                defaultValue: string;
                /** The supported type of the given setting */
                type: 'string' | 'number' | 'boolean' | 'secret';
                /** Specifies a setting that a user is expected to update after app install for a functional app */
                required: boolean;
                /** If true, this hides the setting from being shown in the default setting page*/
                hidden: boolean;
            };
        };
    };
    /** The customizable data type within Kustomer. This allows you to create new objects within the Kustomer platform. */
    klasses: Klass[];
    /** Small chunks of JSX (either direct or an iframe-based CardJsCard), which allows for visual extensions and interactive functionality within the Kustomer UI. These can be loaded in a variety of places, such as within the Timeline, as a Card in the insights Panel, or as a Widget. */
    kviews: KView[];
    /** A configurable portion of a workflow, that accepts an object, which can then be ran through a defined type, and then pass a new object out into the next step of the workflow */
    actions: Action[];
    /** Pre-defined blocks of text that can be used as a canned response */
    shortcuts: Shortcut[];
    /** HTTP request definitions for apps to call */
    commands: Command[];
    /** Translations. Related to actions and triggers */
    i18n: I18n;
    /** An array of outbound webhook configurations  */
    outboundWebhooks: OWebhook[];
}
