import Joi from 'joi';
import * as models from './models';
/**
 * Kustomer System Event Data - attribute types to be added later
 */
export interface EventData<T = any> {
    readonly id: string;
    readonly type: keyof EventResources;
    readonly attributes: T;
    readonly relationships: any;
    readonly links: any;
}
/**
 * Kustomer System Event
 */
export interface Event<T = any> {
    readonly id?: string;
    readonly name: string;
    readonly orgId: string;
    readonly data: EventData<T>;
    readonly createdAt?: string;
}
/**
 * @private
 */
export declare const EVENT_SCHEMA: Joi.ObjectSchema<Event<any>>;
export declare type EventCallback<T = any, R = any> = (event: Event<T>) => R;
export interface EventResources {
    customer: {
        create: models.Customer;
        update: models.Customer;
    };
    team: {
        create: models.Team;
        update: models.Team;
    };
    user: {
        create: models.User;
        update: models.User;
    };
}
