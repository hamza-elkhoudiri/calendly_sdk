import { WithID } from '../common';
import { Customer, CustomerCreate, CustomerUpdate, KObject } from '../models';
import { APIBase, APIBaseOptions } from './base';
export declare class Customers extends APIBase {
    constructor(token: string, orgName: string, options: APIBaseOptions);
    /**
     * get a customer by id
     * @param id customer id (unique)
     */
    getById(id: string): Promise<WithID<Customer> | undefined>;
    /**
     * get a customer by email
     * @param email customer email (unique)
     */
    getByEmail(email: string): Promise<WithID<Customer> | undefined>;
    /**
     * get a customer by phone
     * @param phone customer phone (unique)
     * @returns
     */
    getByPhone(phone: string): Promise<WithID<Customer> | undefined>;
    /**
     * create a new customer
     */
    create<T>(args: CustomerCreate<T>): Promise<WithID<Customer>>;
    /**
     * update an existing customer
     * @param id customer id (unique)
     */
    update<T>(id: string, args: CustomerUpdate<T>): Promise<WithID<Customer>>;
    /**
     * create a kobject for a customer
     * @param id customer id (unique)
     * @param klass klass name
     */
    createKObject<T = any>(id: string, klass: string, object: KObject<T>): Promise<WithID<KObject>>;
}
